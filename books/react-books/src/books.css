/* GLOBAL SETUP */
:root {
    --bg-main: #F4F7FD;
    --bg-sidebar: #FFFFFF;
    --primary-blue: #3B82F6;
    --primary-blue-dark: #2563EB;
    --text-dark: #0F172A;
    --text-light: #64748B;
    --text-white: #FFFFFF;
    --border-color: #E2E8F0;
    --shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -2px rgba(0, 0, 0, 0.1);
    --radius: 12px;
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Inter', 'Arial', sans-serif;
    background-color: var(--bg-main);
    color: var(--text-dark);
    /* A font similar to the design is imported in the previous HTML. If not available, it falls back to Arial. */
}

/* MAIN LAYOUT - Limited to the 2-column structure */
.container {
    display: flex;
    height: 100vh;
}

/* SIDEBAR STYLING - Styling the .commands-column */
.commands-column {
    flex: 0 0 260px; /* Give it a fixed width like the design */
    background-color: var(--bg-sidebar);
    padding: 24px;
    display: flex;
    flex-direction: column;
    gap: 16px;
    border-right: 1px solid var(--border-color);
}

/* Styling the buttons to look like navigation links */
.commands-column button {
    width: 100%;
    padding: 12px 16px;
    border-radius: var(--radius);
    text-decoration: none;
    color: var(--text-light);
    font-weight: 500;
    font-size: 1rem;
    font-family: 'Inter', sans-serif;
    transition: background-color 0.2s, color 0.2s;
    border: none;
    background-color: transparent;
    cursor: pointer;
    text-align: left; /* Align text to the left like nav links */
}

/* Add a hover effect */
.commands-column button:hover {
    background-color: var(--bg-main);
    color: var(--text-dark);
}

/* Make the second button ("library") look like the active link */
/* This is now handled dynamically in React, but you could add a .active class in React
   and style it like this:
.commands-column button.active {
    background-color: var(--primary-blue);
    color: var(--text-white);
    font-weight: 600;
}
   For now, I'm commenting out the nth-child as it's not dynamically reflecting state.
*/
/* .commands-column button:nth-child(2) {
    background-color: var(--primary-blue);
    color: var(--text-white);
    font-weight: 600;
} */


/* MAIN CONTENT AREA STYLING - The container for either the grid or the form */
.content-area {
    flex: 1;
    padding: 24px 32px;
    overflow-y: auto;
    /* Default styling if no specific content is active, or common to both */
    background-color: rgb(196, 196, 196);
}

/* STYLING THE BOOK GRID (when active) */
.library-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
    gap: 24px;
    align-content: flex-start; /* Align cards to the top */
}

/* STYLING THE ADD BOOK FORM */
#new-book-form {
    background-color: var(--bg-sidebar);
    padding: 32px;
    border-radius: var(--radius);
    box-shadow: var(--shadow);
    max-width: 500px; /* Limit form width */
    margin: 40px auto; /* Center the form in the content area */
    display: flex;
    flex-direction: column;
    gap: 20px;
    border: 1px solid var(--border-color);
}

.form-title {
    font-size: 1.5rem;
    font-weight: 600;
    color: var(--primary-blue);
    margin-bottom: 10px;
    text-align: center;
}

.form-row {
    display: flex;
    flex-direction: column; /* Stack label and input */
    gap: 8px;
}

.form-group label { 
    font-size: 0.9rem;
    font-weight: 500;
    color: var(--text-dark);
}

#bookImageInput {
    display: none;
}

/* Style the label to look like a button */
.attach-image-label {
    display: block;
    width: 100%;
    padding: 10px;
    margin-bottom: 10px; /* To give it space from the button below it */
    border: none;
    background: #555; /* A slightly different shade to distinguish it */
    color: #fff;
    cursor: pointer;
    font-size: 16px;
    text-align: center;
    border-radius: 4px; /* Matches the input fields */
    box-sizing: border-box; /* Ensures padding doesn't affect the width */
}

.attach-image-label:hover {
    background: #777;
}


.form-group input[type="text"] {
    width: 100%;
    padding: 10px 12px;
    border: 1px solid var(--border-color);
    border-radius: 8px;
    font-size: 1rem;
    color: var(--text-dark);
    background-color: var(--bg-main); /* Slightly different background for inputs */
    transition: border-color 0.2s, box-shadow 0.2s;
}

.form-group input[type="text"]:focus {
    outline: none;
    border-color: var(--primary-blue);
    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.2); /* Light blue focus ring */
}

#new-book-form button[type="submit"],
#new-book-form button[type="button"] { /* Apply styles to both submit and cancel buttons */
    background-color: var(--primary-blue);
    color: var(--text-white);
    padding: 12px 20px;
    border: none;
    border-radius: 8px;
    font-size: 1rem;
    font-weight: 600;
    cursor: pointer;
    transition: background-color 0.2s;
    margin-top: 10px;
}

#new-book-form button[type="submit"]:hover,
#new-book-form button[type="button"]:hover {
    background-color: var(--primary-blue-dark);
}

#new-book-form button[type="button"] { /* Specific style for the cancel button */
    background-color: var(--text-light); /* Or a neutral color */
    margin-top: 5px;
}

#new-book-form button[type="button"]:hover {
    background-color: #5a687a; /* Darker gray on hover */
}

/* NOTE: Since there's no <img> tag in the JS-generated cards, we cannot add book covers. */